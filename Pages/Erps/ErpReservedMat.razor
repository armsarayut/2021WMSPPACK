@page "/erp/reservedmat"
@using GoWMS.Server.Data
@using GoWMS.Server.Controllers
@using GoWMS.Server.Models
@using GoWMS.Server.Models.Erp

@inject ErpService ObjErpService

@if (Elements == null)
{
    // <p><em>Loading...</em></p>
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
    <MudText Typo="Typo.h6" Color="Color.Primary"> @mPageHeader </MudText>
    <MudTable Items="@Elements" FixedHeader="@fixed_header" FixedFooter="@fixed_footer" Height="@(fixed_header || fixed_footer ?"600px":"")" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<V_Reserved_MaterialsInfo,bool>(FilterFunc)" @bind-SelectedItem="selectedItem">
        <ToolBarContent>
            <MudTooltip Text="Export" Color="Color.Secondary" Placement="Placement.Top">
                <MudMenu Icon="@Icons.Filled.Download" Color="Color.Primary">
                    <MudMenuItem>Excel</MudMenuItem>
                    <MudMenuItem>Pdf</MudMenuItem>
                </MudMenu>
            </MudTooltip>
            <MudSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>

        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.Package_ID)">PackID</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.Roll_ID)">RollID</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.Material_Code)">Material</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.Description)">Description</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.WH_Code)">WHCode</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.Warehouse)">Warehouse</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.Quantity)">Quantity</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.Unit)">Unit</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.Job)">Job</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.Job_Code)">JobCode</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<V_Reserved_MaterialsInfo, object>(x=>x.MO_Barcode)">MOBarcode</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="PackID">@context.Package_ID</MudTd>
            <MudTd DataLabel="RollID">@context.Roll_ID</MudTd>
            <MudTd DataLabel="Material">@context.Material_Code</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
            <MudTd DataLabel="WHCode">@context.WH_Code</MudTd>
            <MudTd DataLabel="Warehouse">@context.Warehouse</MudTd>
            <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
            <MudTd DataLabel="Unit">@context.Unit</MudTd>
            <MudTd DataLabel="Job">@context.Job</MudTd>
            <MudTd DataLabel="JobCode">@context.Job_Code</MudTd>
            <MudTd DataLabel="MOBarcode">@context.MO_Barcode</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10,20,50,100}" />
        </PagerContent>
    </MudTable>
}

@code {
    private string mPageHeader = "Reserved Materials";
    //private string msgAction = "Enter Palletcode";
    private string mPalletcode { get; set; } = "";
    private string mPackid { get; set; } = "";
    private string palletcode { get; set; }
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = false;
    private bool fixed_header = true;
    private bool fixed_footer = true;
    private string searchString = "";
    private V_Reserved_MaterialsInfo selectedItem = null;
    private HashSet<V_Reserved_MaterialsInfo> selectedItems = new HashSet<V_Reserved_MaterialsInfo>();
    private IEnumerable<V_Reserved_MaterialsInfo> Elements = new List<V_Reserved_MaterialsInfo>();

    public int elevation = 0;

    protected override async Task OnInitializedAsync()
    {
        ErpService objCS = new ErpService();
        //Elements = await Task.Run(() => objCS.GetReceivingOrdersbypallet(mPalletcode));
        Elements = await Task.Run(() => objCS.GetAllErpReservedMaterials());
    }


    private bool FilterFunc(V_Reserved_MaterialsInfo element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Material_Code.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Package_ID.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Roll_ID.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.WH_Code} {element.Description} {element.MO_Barcode} {element.Warehouse}".Contains(searchString))
            return true;
        return false;
    }

}
